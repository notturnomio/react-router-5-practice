{"version":3,"file":"static/js/117.90bee43d.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\"};","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n  const { onAddedComment, quoteId } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet.</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.esp}</p>\n      <figcaption>{props.eng}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nfunction QuoteDetail() {\n  const match = useRouteMatch();\n  const params = useParams();\n  console.log(params.quoteId);\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"centered\">{error}</div>;\n  }\n\n  if (!loadedQuote.esp) {\n    return (\n      <>\n        <h2>No quote found.</h2>\n        <Link className=\"btn\" to=\"/quotes\">\n          Return\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <HighlightedQuote {...loadedQuote} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n}\n\nexport default QuoteDetail;\n"],"names":["props","className","classes","text","comments","map","comment","id","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","quoteId","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","onSubmit","LoadingSpinner","htmlFor","rows","ref","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","esp","eng","match","useRouteMatch","params","console","log","getSingleQuote","loadedQuote","path","exact","to","url"],"sourceRoot":""}