{"version":3,"file":"static/js/335.da9878d6.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCuEnI,EAjEkB,SAACH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAC1BC,GAAkBC,EAAAA,EAAAA,UAClBC,GAAkBD,EAAAA,EAAAA,UAkBxB,OACE,iCACE,SAAC,KAAM,CACLE,KAAML,EACNM,QAAS,SAACC,GAAQ,gDACmBA,EAASC,SAAQ,iDAGxD,SAAC,EAAI,WACH,kBACEC,QAfmB,WACzBC,QAAQC,IAAI,UACZV,GAAc,EAChB,EAaQL,UAAWC,EACXe,SA5BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAab,EAAgBc,QAAQC,MACrCC,EAAad,EAAgBY,QAAQC,MAEvCF,EAAWI,MAAM,KAAKC,KAAK,KAAOF,EAAWC,MAAM,KAAKC,KAAK,KAC/DzB,EAAM0B,WAAW,CAAEC,IAAKP,EAAYQ,IAAKL,GAE7C,EAmBoC,UAE3BvB,EAAM6B,YACL,gBAAK5B,UAAWC,EAAgB,UAC9B,SAAC4B,EAAA,EAAc,OAInB,iBAAK7B,UAAWC,EAAgB,WAC9B,iBAAKD,UAAWC,EAAgB,WAC9B,kBAAO6B,QAAQ,UAAS,+BACxB,qBAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAK3B,QAEvC,kBAAOwB,QAAQ,UAAS,qCACxB,qBACEI,KAAK,OACLH,GAAG,UACHC,KAAK,IACLC,IAAKzB,QAGT,gBAAKR,UAAWC,EAAgB,UAC9B,mBAAQkC,QAAS,kBAAM9B,GAAc,EAAM,EAAEL,UAAU,MAAK,gCAQxE,E,kBC7CA,MAlBA,WACE,OAAgCoC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAUC,EAAAA,EAAAA,MAWhB,OATAC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEjB,GAAG,CAACJ,EAAQC,KAMV,SAAC,EAAS,CAACZ,UAAsB,YAAXW,EAAsBd,WAJtB,SAACmB,GACvBN,EAAYM,EACd,GAIF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const spanishInputRef = useRef();\n  const englishInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredEsp = spanishInputRef.current.value;\n    const enteredEng = englishInputRef.current.value;\n\n    if (enteredEsp.split(\" \").join(\"\") && enteredEng.split(\" \").join(\"\")) {\n      props.onAddQuote({ esp: enteredEsp, eng: enteredEng });\n    }\n  }\n\n  const formFocusedHandler = () => {\n    console.log(\"Focus!\");\n    setIsEntering(true);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          `Are you sure you want to go to \"${location.pathname}\" without saving? Your data will be lost.`\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <div className={classes.control}>\n              <label htmlFor=\"spanish\">Quote in Spanish</label>\n              <textarea id=\"spanish\" rows=\"5\" ref={spanishInputRef}></textarea>\n            </div>\n            <label htmlFor=\"english\">Translation in English</label>\n            <textarea\n              type=\"text\"\n              id=\"english\"\n              rows=\"5\"\n              ref={englishInputRef}\n            ></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={() => setIsEntering(false)} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nfunction NewQuote() {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n}\n\nexport default NewQuote;\n"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","spanishInputRef","useRef","englishInputRef","when","message","location","pathname","onFocus","console","log","onSubmit","event","preventDefault","enteredEsp","current","value","enteredEng","split","join","onAddQuote","esp","eng","isLoading","LoadingSpinner","htmlFor","id","rows","ref","type","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}